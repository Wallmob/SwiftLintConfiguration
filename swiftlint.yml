disabled_rules:
  - identifier_name
  - trailing_whitespace
  - type_name
  - file_length
  - function_body_length
  - type_body_length
  - inclusive_language
  - function_parameter_count
  - unused_optional_binding
  - nesting
  - redundant_objc_attribute # Remove after https://github.com/realm/SwiftLint/issues/4633 is fixed
  - compiler_protocol_init

opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - colon
  - convenience_type
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - enum_case_associated_values_count
  - fatal_error_message
  - file_name
  - first_where
  - force_unwrapping
  - indentation_width
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - multiline_arguments
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - operator_usage_whitespace
  - overridden_super_call
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - redundant_nil_coalescing
  - redundant_type_annotation
  - shorthand_optional_binding
  - sorted_imports
  - toggle_bool
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - unused_import
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition

line_length:
  warning: 130
  error: 200
  ignores_comments: true

force_cast: warning
force_try: warning

trailing_semicolon: error

multiline_arguments:
  first_argument_location: next_line
  only_enforce_after_first_closure_on_first_line: true

private_over_fileprivate:
  validate_extensions: true

trailing_closure:
  only_single_muted_parameter: true

cyclomatic_complexity:
  ignores_case_statements: true

opening_brace:
  ignore_multiline_statement_conditions: true

large_tuple:
  warning: 3
  error: 4

custom_rules:
  combine_cancellable_set:
    # Matches:
    # - [AnyCancellable]
    name: "AnyCancellables as Set"
    regex: "\\[AnyCancellable\\]"
    message: "Combine Cancellables must be put in a Set rather than Array."
    severity: error
  direct_date_usage:
    # Matches:
    # - Date()
    # - Date.init()
    # - Date.now
    # - Date.timeIntervalSinceReferenceDate
    # - Date.init(timeIntervalSinceNow: 123)
    # - Date(timeIntervalSinceNow: 123)
    # - NSDate.now
    # - ,NSDate.now
    # - ,Date()
    #
    # Does not match:
    # - Date.timeIntervalBetween1970AndReferenceDate
    name: "Direct Date usage"
    regex: "(\\s|,|NS)Date\\.?(init)?(\\(\\)|now|timeIntervalSinceReferenceDate|\\(timeIntervalSinceNow)"
    message: "Date must be initialized from Clock rather than directly. Use DI.resolve(.date) or a method from DI.resolve(.clock)"
    severity: error
  date_since_now:
    # Matches:
    # - Date.timeIntervalSinceNow
    #
    # Does not match:
    # - DI.resolve(.clock).timeIntervalSinceNow(ofDate: date)
    name: "Incorrect Date since Now usage"
    regex: "\\.timeIntervalSinceNow[^(]"
    message: "Date must be initialized from Clock rather than directly. Use DI.resolve(.clock).timeIntervalSinceNow(ofDate:)"
    severity: error
  int_truncating:
    # Matches:
    # - Int(truncating: someValue)
    # - Int(
    #     truncating: anotherValue
    #   )
    name: "Int truncating usage"
    regex: "Int\\s*\\(\\s*truncating:"
    message: "Int truncating should be avoided. Use .asInt instead."
    severity: warning
  intValue:
    # Matches:
    # - .intValue
    #
    # Does not match:
    # - object.intValue =
    # - let intValue: Int
    name: "intValue usage"
    regex: "\\.intValue(?!\\s*=)"
    message: "intValue should be avoided. Use .asInt instead."
    severity: warning
